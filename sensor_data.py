# -*- coding: utf-8 -*-
"""sensor_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v7I3GYo94tHUPfKgEWKhjjjtH29rvn9c
"""

import paho.mqtt.client as mqtt
import random
import time
import json

# MQTT broker address and port
ACCESS_TOKEN1='Dzs0JwReSXvfPYEEszwE'
ACCESS_TOKEN2='9j3W9URQvuERX7ypDNTb'
broker_address = "demo.thingsboard.io"
broker_port = 1883
print("hello from station 1 and 2")

# MQTT topic to publish sensor data
topic = "v1/devices/me/telemetry"

# Virtual temperature sensor function
def iotStationOne():
    data = {}
    data['temperature'] = round(random.uniform(-50, 50), 2)
    data['humidity']=round(random.uniform(0,100),2)
    data['CO2'] = round(random.uniform(300, 2000), 2)
    data['rain_height'] = round(random.uniform(0, 50), 2)
    data['wind_direction'] = round(random.uniform(0, 360), 2)
    data['wind_intensity'] = round(random.uniform(0, 100), 2)
    return data

def iotStationTwo():
    data = {}
    data['temperature'] = round(random.uniform(-50, 50), 2)
    data['humidity']=round(random.uniform(0,100),2)
    data['CO2'] = round(random.uniform(300, 2000), 2)
    data['rain_height'] = round(random.uniform(0, 50), 2)
    data['wind_direction'] = round(random.uniform(0, 360), 2)
    data['wind_intensity'] = round(random.uniform(0, 100), 2)
    return data

# Create MQTT client instance

# Connect to MQTT broker
client1 = mqtt.Client() 
client2 = mqtt.Client()#create client object
print(client1)
#client1.on_publish = on_publish     #assign function to callback
client1.username_pw_set(ACCESS_TOKEN1)   #access token from  thingsboard device
client1.connect(broker_address , broker_port , keepalive=60)   #establish connection
client2.username_pw_set(ACCESS_TOKEN2)   #access token from  thingsboard device
client2.connect(broker_address , broker_port , keepalive=60)   #establish connection

# Publish temperature sensor data every 5 seconds
while True:
    sensor_data_station1 = iotStationOne()
    sensor_data_station2 = iotStationTwo()
    print(sensor_data_station1)
    print(sensor_data_station2)
    client1.publish(topic, json.dumps((sensor_data_station1)))
    client2.publish(topic, json.dumps((sensor_data_station2)))
    time.sleep(5)